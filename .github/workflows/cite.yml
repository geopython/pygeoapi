name: 'Perform CITE tests against a local teamengine instance'

on:
  push:
  pull_request:

env:
  COLUMNS: 120


jobs:

  perform-cite-testing:
    name: ${{ matrix.test-suite.suite-id }} CITE testing
    continue-on-error: true
    strategy:
      matrix:
        test-suite:
          - suite-id: ogcapi-features-1.0
            arguments: >-
              iut=http://host.docker.internal:5001 
              noofcollections=-1
          - suite-id: ogcapi-processes-1.0
            arguments: >-
              iut=http://host.docker.internal:5001
              noofcollections=-1
          - suite-id: ogcapi-edr10
            arguments: >-
              iut=http://host.docker.internal:5001
              apiDefinition=http://localhost:5001/openapi
          - suite-id: ogcapi-tiles-1.0
            arguments: >-
              iut=http://host.docker.internal:5001
              tilematrixsetdefinitionuri=http://www.opengis.net/def/tilematrixset/OGC/1.0/WebMercatorQuad
              urltemplatefortiles=http://localhost:5001/collections/lakes/tiles/WebMercatorQuad/{tileMatrix}/{tileRow}/{tileCol}?f=mvt
              tilematrix=0
              mintilerow=0
              maxtilerow=1
              mintilecol=0
              maxtilecol=1

    runs-on: ubuntu-22.04
    steps:

      - name: grab code
        uses: actions/checkout@v4

      - name: start pygeoapi with suitable CITE data and config
        run: >
          docker compose -f tests/cite/compose.test-cite.yaml up --detach

      - name: wait for pygeoapi to be usable
        uses: raschmitt/wait-for-healthy-container@v1.0.1
        with:
          container-name: pygeoapi-cite-pygeoapi-1
          timeout: 120
#
#      - name: collect docker logs on failure
#        if: failure()
#        uses: jwalton/gh-docker-logs@v2.2.2
#        with:
#          images: ghcr.io/geopython/pygeoapi
#          tail: 500

      - name: test {{ matrix.test-suite.suite-id }} compliance
        uses: OSGeo/cite-runner@main
        with:
          test_suite_identifier: ${{ matrix.test-suite.suite-id }}
          test_session_arguments: ${{ matrix.test-suite.arguments }}

  set-final-status:
    needs: perform-cite-testing
    runs-on: ubuntu-22.04
    if: always()
    steps:
      - name: check status of workflow
        run: |
          if [ "${{ contains(needs.*.result, 'failure') }}" = "true" ]; then
              echo "One or more workflow jobs have failed"
              exit 1
          else
              echo "All workflow jobs have passed"
          fi