language: python

dist: bionic
sudo: false

env:
  global:
    - PYGEOAPI_CONFIG="$(pwd)/pygeoapi-config.yml"
    - CPLUS_INCLUDE_PATH=/usr/include/gdal
    - C_INCLUDE_PATH=/usr/include/gdal

python:
  - "3.6"
  - "3.7"

services:
  - postgresql
  - docker

addons:
  apt:
    sources:
      - sourceline: 'ppa:ubuntugis/ubuntugis-unstable'
      - sourceline: 'deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse'
    packages:
      - gdal-bin
      - libgdal-dev
      - libsqlite3-mod-spatialite
      - python-pyspatialite
      - postgresql-10-postgis-2.4
      - mongodb-org

before_install:
  - sudo apt-get install -qq build-essential python3-dev python3-setuptools python-all python3-all python-setuptools python3-pip
  - sudo apt-get install -y devscripts fakeroot debhelper

  # install Elasticsearch 7
  - curl -s -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.5.1-amd64.deb
  - sudo dpkg -i --force-confnew elasticsearch-7.5.1-amd64.deb
  - sudo sed -i.old 's/-Xms1g/-Xms128m/' /etc/elasticsearch/jvm.options
  - sudo sed -i.old 's/-Xmx1g/-Xmx128m/' /etc/elasticsearch/jvm.options
  - echo -e '-XX:+DisableExplicitGC\n-Djdk.io.permissionsUseCanonicalPath=true\n-Dlog4j.skipJansi=true\n-server\n' | sudo tee -a /etc/elasticsearch/jvm.options
  - sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
  - sudo systemctl start elasticsearch
  # start MongoDB
  - sudo systemctl enable mongod
  - sudo systemctl start mongod
  - sudo systemctl status mongod

install:
  # follow GDAL installed version for Python bindings
  - pip3 install GDAL==`gdalinfo --version | cut -d' ' -f2 | cut -d',' -f1`
  - pip3 install -r requirements.txt
  - pip3 install -r requirements-dev.txt
  - pip3 install -r requirements-provider.txt
  - python3 setup.py install
  # verify docker build
  - docker build -t geopython/pygeoapi:latest .

before_script:
  - sleep 20
  - python3 tests/load_es_data.py tests/data/ne_110m_populated_places_simple.geojson geonameid
  - python3 tests/load_mongo_data.py tests/data/ne_110m_populated_places_simple.geojson
  - pygeoapi generate-openapi-document -c pygeoapi-config.yml > pygeoapi-openapi.yml
  - psql -U postgres -c 'create database test'
  - psql -U postgres -d test -c 'create extension postgis'
  - gunzip < tests/data/hotosm_bdi_waterways.sql.gz | psql -U postgres test
  # load cite data
  - python3 tests/load_es_data.py tests/cite/ogcapi-features/canada-hydat-daily-mean-02HC003.geojson IDENTIFIER

script:
  - pytest --cov=pygeoapi
  - make -C ./docs html
  - find . -type f -name "*.py" | xargs flake8
  # run docker image with cite configuration
  - docker run -d -p 5001:5001 --network host --add-host="localhost:127.0.0.1" --rm -it -v $(pwd)/tests/cite/ogcapi-features/cite.config.yml:/pygeoapi/local.config.yml --name pygeoapi-travis-master geopython/pygeoapi:latest run
  - docker ps | grep -wq 'pygeoapi-travis-master'
  - sleep 10
  - docker logs pygeoapi-travis-master 2>&1 | grep -wq 'Listening at:'
  - docker run --rm --name pygeoapi-travis-runtests-master geopython/pygeoapi:latest test

after_success:
  - python3 setup.py sdist bdist_wheel --universal
  - sudo debuild -b -uc -us

notifications:
  irc:
    channels:
      - "irc.freenode.org#pygeoapi-activity"
    use_notice: true