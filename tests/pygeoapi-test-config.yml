server:
    bind:
        host: 0.0.0.0
        port: 5000
    url: http://localhost:5000/
    mimetype: application/json; charset=UTF-8
    encoding: utf-8
    language: en-US
    cors: true
    pretty_print: true
    limit: 10
    # templates: /path/to/templates

logging:
    level: ERROR
    #logfile: /tmp/pygeoapi.log

metadata:
    identification:
        title: pygeoapi default instance
        description: pygeoapi provides an API to geospatial data
        keywords:
            - geospatial
            - data
            - api
        keywords_type: theme
        terms_of_service: None
        url: http://example.org
    license:
        name: CC-BY 4.0 license
        url: https://creativecommons.org/licenses/by/4.0/
    provider:
        name: Organization Name
        url: https://github.com/geopython/pygeoapi
    contact:
        name: Lastname, Firstname
        position: Position Title
        address: Mailing Address
        city: City
        stateorprovince: Administrative Area
        postalcode: Zip or Postal Code
        country: Country
        phone: +xx-xxx-xxx-xxxx
        fax: +xx-xxx-xxx-xxxx
        email: you@example.org
        url: Contact URL
        hours: Hours of Service
        instructions: During hours of service.  Off on weekends.
        role: pointOfContact

datasets:
    obs:
        title: Observations
        description: Observations
        keywords:
            - observations
            - monitoring
        crs:
            - CRS84
        links:
            - type: text/csv
              rel: canonical
              title: data
              href: https://github.com/mapserver/mapserver/blob/branch-7-0/msautotest/wxs/data/obs.csv
              hreflang: en-US
            - type: text/csv
              rel: alternate
              title: data
              href: https://raw.githubusercontent.com/mapserver/mapserver/branch-7-0/msautotest/wxs/data/obs.csv
              hreflang: en-US
        extents:
            spatial:
                bbox: [-180,-90,180,90]
            temporal:
                begin: 2000-10-30T18:24:39Z
                end: 2007-10-30T08:57:29Z
        provider:
            name: CSV
            data: tests/data/obs.csv
            id_field: id
            geometry:
                x_field: long
                y_field: lat

processes:
    hello-world:
        processor:
            name: HelloWorld
